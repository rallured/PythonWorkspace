---------------- generaPlot ---------------
FILE	i:\vince\prog\offaxis\oa\simx2006\generaplot.py

DESCRIPTION
    todo:
        importando il modulo dice:
       C:\work\pythonAnalyzer\geometria\geoShell.py:1: DeprecationWarning:
       Non-ASCII character '°' in file I:
ince\prog\offaxis\OA\simX2006\generaPlot.py
       on line 211, but no encoding declared;
       see http://www.python.org/peps/pep-0263.html for details 
       forse:
       possibilita' di aggiungere numero iniziale ai nomi file, in modo da averli ordinati
       routine per settare il titolo nei grafici, i valori di focale ecc, nella tabella,
       ed eventualmente il nome dei file di output
    istruzioni:
       partendo da elenco di cartelle di risultati (ottenute con i programmi fortran offAxis)
       nel di file di testo in fl,
       per ogni cartella elencata valuta peso, campo di vista interpolato all'energia entarget
       area e angoli usati per il calcolo.
       genera file 'plotta.plt' per il plot con gnuplot di curve di area efficace e dati valutati.
       scrive gli stessi dati in un file 'tabella.txt'
    per usarlo:
       impostare enTarget
       impostare in fl l'elenco dei file di testo contenenti gli elenchi di directory
       attenzione alla routine extractTitle che estrae i valori da usare nei titoli dei grafici
       e nelle tabelle dal nome delle directory (nettamente migliorabile, es. potrebbe prenderli
       dal file dei parametri)
    note:
       i valori di area efficace e peso indicato nei grafici sono rispettivamente, ridotti del 10%
       (per lo spider) e aumentato del 30% (per la struttura). I valori delle tabelle non comprendono
       correzioni.

FUNCTIONS
    Wrecover(folder)
        recupera il peso dal file pesi.txt in folder
    
    evaluateFOV(folder, entarget, ang)
        valuta il campo di vista all'energia energy per il file delle aree
        offaxis contenuto in folder
    
    extractTitle(st)
        dalla stringa con il nome della directory estrae le informazioni
        sulla configurazione e restituisce una lista con
        coating, filling factor, focale, diametro massimo
    
    loadCol(file, n)
        carica da un file l'n-sima colonna, restituisce lista
        di liste di valori letti (una per ogni blocco di dati)
    
    loadEn(file)
        carica da un file delle aree un vettore con le energie
    
    offAxisInfo(folder, entarget)
        passando un folder e l'energia entarget restituisce
        peso,lista degli angoli, fov interpolato e area corrispondente
    
    retrieveAngleSteps(folder)
        recupera dal file delle impostazioni in folder i valori degli angoli offaxis utilizzati
        li restituisce in lista


---------------- FOV_energie -----------------
FILE    i:\vince\prog\offaxis\oa\simx2006\fov_energie.py

DESCRIPTION
    calcola fov, grasp e grasp/platescale per diverse combinazioni di parametri geometrici
    per i file elencati nei file di testo in lista fl i risultati sono nei file di testo con 4 colonne:
    energia, fov diameter(arcmin), grasp (FOV/Aeff**2),grasp / plateScale(Rspot(=15")/Focal).
    I valori sono calcolati finno ad un energia massima per la quale si ha Aeff(Emax)=cutoffEn*Aeff[E0],
    i valori di taglio sono elencati in cutoffEnergy.txt.
    Il programma crea un file per plottare le singole FOV con peso e area a 30 kev, per plottare 
    gli altri risultati usare le routines in plotRoutines.py

FUNCTIONS
    calcolaFOV_Grasp(resdir, cutoffRatio=0.050000000000000003, fl=['IrTutti.txt', 'tutti.txt'])
        calcola i risultati di FOV e GRASP per le cartelle (risultati di offaxis)
        elencate nel file fl. i risultati vanno in resdir
        cutoffRatio rapporto tra aeffMax e aeff(E) al di sotto del quale si ritiene
        non affidabile il calcolo del FOV

---------------- generalRoutines -----------------
FILE    i:\vince\prog\offaxis\oa\simx2006\generalroutines.py

FUNCTIONS
    QTclust(puntiDic, Dmax, distance=<function eucDist>)
        puntiDic e' un dizionario con indice come chiave e valori su cui calcolare
        la distanza distance. Dmax e' il raggio massimo del cluster.
        restituisce una lista di liste ognuna delle quali e' un gruppo di indici che
        formano un cluster. usa algoritmo "quality threshold clustering (QTclust)"
        in caso di cluster candidati con stesso numero di membri sceglie quello di raggio
        minore
    
    ciclazza(possibilita, indici, base=None)
        data una lista possibilita di liste di elementi tra cui scegliere, restituisce
        tutte le possibili scelte ciclando sugli indici nella tupla indici.
        per gli elementi non ciclati usa i valori in base. Senza base usa 0, mentre
        passando possibilita come base li lascia immutati
       
    defaultDist = eucDist(p1, p2)
        demenziale distanza euclidea
    
    distanceTable(pList, dist=<function eucDist>)
        da una lista di punti pList, crea la tabella delle distanze con
        la distanza dist
     
    eucDist(p1, p2)
        demenziale distanza euclidea
    
    interpola(xsource, ysource, xtarget)
        dati vettori x e y e vettore xtarget delle ascisse per cui si vogliono
        valori della y interpolata, restuisce il vettore delle y interpolate
Help on module plotRoutines:

---------------- plotRoutines ---------------
FILE    i:\vince\prog\offaxis\oa\simx2006\plotroutines.py

FUNCTIONS
    cmpPlot(resdir, groupFile='gruppi.txt', overwrite=0, xrange='[*:*]', yrange='[*:*]', pltFilePrefix='', outPrefix='FOV_', term='', dataFileFrmt='%s.txt', using='u 1:2', title='', xlabel='Energy (keV)', ylabel='Interpolated FOV diameter (arcmin)')
    
    groupPlot(resdir, indice=(0, 1), xrange='[*:*]', yrange='[*:*]', comb=[['ML', 'Ir'], [20, 22.5, 25, 27.5, 30], [0.0, 0.070000000000000007, 0.14999999999999999], [60, 70]], pltFilePrefix='', outPrefix='FOV_', term='', combLbl=['Coat', 'Focal', 'FF', 'Dmax'], dataFileFrmt='%s_ff%03i_%im_max%s.txt', using='u 1:2', xlabel='Energy (keV)', ylabel='Interpolated FOV diameter (arcmin)')
        resdir: directory per i risultati,pltFilePrefix: prefisso da attaccare al file di plot
        xrange,yrange: range del plot
        comb in formato [[coatings],[focali],[ff],[diam]], indice 0, 1 o 2, a seconda di quali elementi
            tenere raggruppati
        outPrefix: prefisso per eventuale figura di output
        termExt: tupla con terminale ed estensione per figura di output, se non fornito plotta su schermo
        combLbl: nome dei campi corrispondenti agli elementi di comb. usato per generare il nome del file di plot
        dataFileFrmt: formato del nome del file da cui leggere i dati
        using: colonne da plottare
        xlabel,ylabel: etichette degli assi
    
    plotTemplate(resdir, indice=(0, 1), xrange='[*:*]', yrange='[*:*]', comb=[['ML', 'Ir'], [20, 22.5, 25, 27.5, 30], [0.0, 0.070000000000000007, 0.14999999999999999], [60, 70]], pltFilePrefix='', outPrefix='FOV_', term='', combLbl=['Coat', 'Focal', 'FF', 'Dmax'], dataFileFrmt='%s_ff%03i_%im_max%s.txt', using='u 1:2', xlabel='Energy (keV)', ylabel='Interpolated FOV diameter (arcmin)')
        le variabili sono ordinate in modo da far venire dopo quelle fisse per i plot
        di un certo tipo (per es. etichette degli assi o formato dei file da leggere).
        quelle che possono essere modificate (ad esempio i range vengono prima).
        In questo modo e' piu' facile creare routines per plottare file di un certo tipo,
        eliminando le variabili non desiderate che possono generare errori dall'intestazione della routine
        e lasciandole impostate nella chiamata di groupPlot
    
    plottaFOV(resdir, indice=(0, 1), xrange='[0:60]', yrange='[0:18]', comb=[['ML', 'Ir'], [20, 22.5, 25, 27.5, 30], [0.0, 0.070000000000000007, 0.14999999999999999], [60, 70]], pltFilePrefix='FOV_', outPrefix='FOV_', term='png')
    
    plottaGrasp(resdir, indice=(0, 1), xrange='[0:60]', yrange='[0:120000]', comb=[['ML', 'Ir'], [20, 22.5, 25, 27.5, 30], [0.0, 0.070000000000000007, 0.14999999999999999], [60, 70]], pltFilePrefix='Grasp_', outPrefix='Grasp_', term='png')
    
    plottaGraspPS(resdir, indice=(0, 1), xrange='[0:60]', yrange='[0:140000]', comb=[['ML', 'Ir'], [20, 22.5, 25, 27.5, 30], [0.0, 0.070000000000000007, 0.14999999999999999], [60, 70]], pltFilePrefix='GraspsuPlate_', outPrefix='GraspSc_', term='png')

---------------- correctWeights ----------------
FILE    i:\vince\prog\offaxis\oa\simx2006\correctweights.py

DESCRIPTION
    corregge i pesi calcolati (da densita' 8 a densita' 8.8)
    per tutte le
    directory elencate nel file tutti.txt
    file modificati:
    imp_OffAxis.txt  -->
    pesi.txt  -->


---------------- estraiDiam ----------------
FILE    i:\vince\prog\offaxis\oa\simx2006\estraidiam.py

DESCRIPTION
    estrae i diametri dal file transRayTrace.dat
    per directory elencate nel file estraiDiam.txt
    li mette nella cartella outDiam
    con il nome del file uguale a quello della directory originaria

